.mb-4.flex.bg-gray-300.rounded
  .p-4
    .text-center.mb-2
      = link_to availability.user do
        => user_image_for(availability.user, class: "w-16 rounded-full inline-block")

    .text-center= link_to availability.user.first_name, availability.user, class: "underline"

  .p-4
    p.mb-2
      = link_to availability, class: "underline" do
        => l(availability.starts_at, format: "Le %A %e %B à %kh%M")
        ' à
        = availability.location

    - if availability.vegetarian?
      p.mb-2.text-green-600
        => fa("leaf", class: "border border-green-600 p-2 rounded-full bg-white")
        ' Végétarien

    - if availability.details.present?
      p.mb-2.border-l-2.border-gray-600.pl-2.text-gray-600= availability.details

    - if availability.past?
      p.mb-2 Demande de rendez-vous expirée

    - if availability.user == current_user
      = link_and_count_for(availability, availability.invitations.requested.sent, one: "Une demande en attente de réponse", other: "demandes en attente de réponse", class: "mb-2 text-blue-600 underline")
      = link_and_count_for(availability, availability.invitations.requested.accepted, one: "Une demande acceptée", other: "demandes acceptées", class: "mb-2 text-green-600 underline")
      = link_and_count_for(availability, availability.invitations.requested.declined, one: "Une demande déclinée", other: "demandes déclinées", class: "mb-2 text-red-600 underline")
      = link_and_count_for(availability, availability.invitations.invited.sent, one: "Une invitation en attente de réponse", other: "invitations en attente de réponse", class: "mb-2 text-blue-600 underline")
      = link_and_count_for(availability, availability.invitations.invited.accepted, one: "Une invitation acceptée", other: "invitations acceptées", class: "mb-2 text-green-600 underline")
      = link_and_count_for(availability, availability.invitations.invited.declined, one: "Une invitation déclinée", other: "invitations déclinées", class: "mb-2 text-red-600 underline")

    - elsif invitation = availability.invitations.find_by(from_user: current_user)
      - if invitation.sent?
        p.text-blue-600.mb-2 Demande de rejoindre envoyée
      - elsif invitation.accepted?
        p.text-green-600.mb-2 Demande de rejoindre acceptée
      - else
        p.text-red-600.mb-2 Demande de rejoindre déclinée
    - elsif invitation = availability.invitations.find_by(to_user: current_user)
      - if invitation.sent?
        p.text-blue-600.mb-2 Tu as été invité
        p.mb-2
          => link_to "Refuser", [invitation, :decline], method: :post, class: "button inline-block"
          = link_to "Accepter", [invitation, :accept], method: :post, class: "button button--primary inline-block"

      - elsif invitation.accepted?
        p.text-green-600.mb-2 Invitation acceptée
      - else
        p.text-red-600.mb-2 Invitation déclinée
    - elsif availability.recent?
      = form_for Invitation.new(availability: availability) do |f|
        = f.hidden_field :availability_id
        p.mb-2= f.submit "demander à rejoindre", class: "button--primary"
